{"ast":null,"code":"var _jsxFileName = \"/Users/ashutoshbisht/Desktop/Seller-App/client/src/Components/Pages/DragAndDrop.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { read, utils } from \"xlsx\";\nimport { useDropzone } from \"react-dropzone\";\nimport { useDispatch } from \"react-redux\";\nimport { storeOrder } from \"../Redux/Action\";\nimport \"./DragAndDrop.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ExcelDragAndDrop() {\n  _s();\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const handleDrop = async acceptedFiles => {\n    const file = acceptedFiles[0];\n    const reader = new FileReader();\n    setIsLoading(true);\n    setIsSuccess(false);\n    setIsError(false);\n    reader.onload = async e => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = read(data, {\n        type: \"array\"\n      });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const jsonData = utils.sheet_to_json(worksheet, {\n        header: 1\n      });\n      const orders = [];\n      for (let i = 1; i < jsonData.length; i++) {\n        const row = jsonData[i];\n        const orderData = {\n          id: String(row[0]),\n          status: row[1],\n          items: [],\n          total: 0,\n          currencyUnit: row[7]\n        };\n        const item = {\n          id: String(row[2]),\n          description: row[3],\n          price: parseFloat(row[4]),\n          quantity: parseInt(row[5])\n        };\n        const existingOrder = orders.find(o => o.id === orderData.id);\n        if (existingOrder) {\n          existingOrder.items.push(item);\n          existingOrder.total += item.price * item.quantity;\n        } else {\n          orderData.items.push(item);\n          orderData.total = item.price * item.quantity;\n          orders.push(orderData);\n        }\n      }\n      try {\n        // Simulating an asynchronous save operation\n        const result = await dispatch(storeOrder(orders));\n        if (result.error) {\n          setIsError(true);\n          setIsSuccess(false);\n          setIsLoading(false);\n        } else {\n          setIsError(false);\n          setIsSuccess(true);\n          setIsLoading(false);\n        }\n      } catch (error) {\n        setIsError(true);\n        setIsSuccess(false);\n        setIsLoading(false);\n      }\n      console.log(orders);\n    };\n    reader.onerror = () => {\n      setIsLoading(false);\n      setIsError(true);\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop: handleDrop\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ...getRootProps(),\n    className: `drag-area ${isDragActive ? \"drag-active\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isSuccess ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: \"File saved in the database successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: isError ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: \"Error occurred. Please select another file.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"drop-text\",\n          children: isDragActive ? \"Drop the Excel file here...\" : \"Drag and drop an Excel file here, or click to select a file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this)\n      }, void 0, false)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(ExcelDragAndDrop, \"NfDMBWKoZ3pJ39/Ho9+e5U3xq7o=\", false, function () {\n  return [useDispatch, useDropzone];\n});\n_c = ExcelDragAndDrop;\nexport default ExcelDragAndDrop;\nvar _c;\n$RefreshReg$(_c, \"ExcelDragAndDrop\");","map":{"version":3,"names":["React","useState","read","utils","useDropzone","useDispatch","storeOrder","jsxDEV","_jsxDEV","Fragment","_Fragment","ExcelDragAndDrop","_s","dispatch","isLoading","setIsLoading","isSuccess","setIsSuccess","isError","setIsError","handleDrop","acceptedFiles","file","reader","FileReader","onload","e","data","Uint8Array","target","result","workbook","type","sheetName","SheetNames","worksheet","Sheets","jsonData","sheet_to_json","header","orders","i","length","row","orderData","id","String","status","items","total","currencyUnit","item","description","price","parseFloat","quantity","parseInt","existingOrder","find","o","push","error","console","log","onerror","readAsArrayBuffer","getRootProps","getInputProps","isDragActive","onDrop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ashutoshbisht/Desktop/Seller-App/client/src/Components/Pages/DragAndDrop.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { read, utils } from \"xlsx\";\nimport { useDropzone } from \"react-dropzone\";\nimport { useDispatch } from \"react-redux\";\nimport { storeOrder } from \"../Redux/Action\";\nimport \"./DragAndDrop.css\";\n\nfunction ExcelDragAndDrop() {\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const handleDrop = async acceptedFiles => {\n    const file = acceptedFiles[0];\n    const reader = new FileReader();\n\n    setIsLoading(true);\n    setIsSuccess(false);\n    setIsError(false);\n\n    reader.onload = async e => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = read(data, { type: \"array\" });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const jsonData = utils.sheet_to_json(worksheet, { header: 1 });\n\n      const orders = [];\n      for (let i = 1; i < jsonData.length; i++) {\n        const row = jsonData[i];\n        const orderData = {\n          id: String(row[0]),\n          status: row[1],\n          items: [],\n          total: 0,\n          currencyUnit: row[7],\n        };\n\n        const item = {\n          id: String(row[2]),\n          description: row[3],\n          price: parseFloat(row[4]),\n          quantity: parseInt(row[5]),\n        };\n\n        const existingOrder = orders.find(o => o.id === orderData.id);\n        if (existingOrder) {\n          existingOrder.items.push(item);\n          existingOrder.total += item.price * item.quantity;\n        } else {\n          orderData.items.push(item);\n          orderData.total = item.price * item.quantity;\n          orders.push(orderData);\n        }\n      }\n\n      try {\n        // Simulating an asynchronous save operation\n        const result = await dispatch(storeOrder(orders));\n\n        if (result.error) {\n          setIsError(true);\n          setIsSuccess(false);\n          setIsLoading(false);\n        } else {\n          setIsError(false);\n          setIsSuccess(true);\n          setIsLoading(false);\n        }\n      } catch (error) {\n        setIsError(true);\n        setIsSuccess(false);\n        setIsLoading(false);\n      }\n\n      console.log(orders);\n    };\n\n    reader.onerror = () => {\n      setIsLoading(false);\n      setIsError(true);\n    };\n\n    reader.readAsArrayBuffer(file);\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop: handleDrop,\n  });\n\n  return (\n    <div\n      {...getRootProps()}\n      className={`drag-area ${isDragActive ? \"drag-active\" : \"\"}`}\n    >\n      <input {...getInputProps()} />\n      {isLoading ? (\n        <div className=\"loading-spinner\" />\n      ) : (\n        <>\n          {isSuccess ? (\n            <p className=\"success-message\">\n              File saved in the database successfully!\n            </p>\n          ) : (\n            <>\n              {isError ? (\n                <p className=\"error-message\">\n                  Error occurred. Please select another file.\n                </p>\n              ) : (\n                <p className=\"drop-text\">\n                  {isDragActive\n                    ? \"Drop the Excel file here...\"\n                    : \"Drag and drop an Excel file here, or click to select a file\"}\n                </p>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default ExcelDragAndDrop;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}