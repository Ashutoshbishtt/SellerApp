{"ast":null,"code":"var _jsxFileName = \"/Users/ashutoshbisht/Desktop/Seller-App/client/src/Components/Pages/DragAndDrop.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { read, utils } from \"xlsx\";\nimport { useDropzone } from \"react-dropzone\";\nimport { storeOrder } from \"../Redux/Action\";\nimport \"./DragAndDrop.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExcelDragAndDrop() {\n  _s();\n  const handleDrop = async acceptedFiles => {\n    const file = acceptedFiles[0];\n    const reader = new FileReader();\n    reader.onload = async e => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = read(data, {\n        type: \"array\"\n      });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const jsonData = utils.sheet_to_json(worksheet, {\n        header: 1\n      });\n      const orders = [];\n      for (let i = 1; i < jsonData.length; i++) {\n        const row = jsonData[i];\n        const orderData = {\n          id: row[0],\n          status: row[1],\n          items: [],\n          total: 0,\n          currencyUnit: row[7]\n        };\n        const item = {\n          id: row[2],\n          description: row[3],\n          price: parseFloat(row[4]),\n          quantity: parseInt(row[5])\n        };\n\n        // Check if order with the same ID already exists\n        const existingOrder = orders.find(o => o.id === orderData.id);\n        if (existingOrder) {\n          existingOrder.items.push(item);\n          existingOrder.total += item.price * item.quantity;\n        } else {\n          orderData.items.push(item);\n          orderData.total = item.price * item.quantity;\n          orders.push(orderData);\n        }\n      }\n      console.log(orders);\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop: handleDrop\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ...getRootProps(),\n    className: isDragActive ? \"drag-active\" : \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Drop the Excel file here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Drag and drop an Excel file here, or click to select a file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(ExcelDragAndDrop, \"YfI2qKQYNDOj7ozxGshQtast5Mk=\", false, function () {\n  return [useDropzone];\n});\n_c = ExcelDragAndDrop;\nexport default ExcelDragAndDrop;\nvar _c;\n$RefreshReg$(_c, \"ExcelDragAndDrop\");","map":{"version":3,"names":["React","useState","read","utils","useDropzone","storeOrder","jsxDEV","_jsxDEV","ExcelDragAndDrop","_s","handleDrop","acceptedFiles","file","reader","FileReader","onload","e","data","Uint8Array","target","result","workbook","type","sheetName","SheetNames","worksheet","Sheets","jsonData","sheet_to_json","header","orders","i","length","row","orderData","id","status","items","total","currencyUnit","item","description","price","parseFloat","quantity","parseInt","existingOrder","find","o","push","console","log","readAsArrayBuffer","getRootProps","getInputProps","isDragActive","onDrop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ashutoshbisht/Desktop/Seller-App/client/src/Components/Pages/DragAndDrop.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { read, utils } from \"xlsx\";\nimport { useDropzone } from \"react-dropzone\";\nimport { storeOrder } from \"../Redux/Action\";\nimport \"./DragAndDrop.css\";\n\nfunction ExcelDragAndDrop() {\n  const handleDrop = async acceptedFiles => {\n    const file = acceptedFiles[0];\n    const reader = new FileReader();\n\n    reader.onload = async e => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = read(data, { type: \"array\" });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const jsonData = utils.sheet_to_json(worksheet, { header: 1 });\n\n      const orders = [];\n      for (let i = 1; i < jsonData.length; i++) {\n        const row = jsonData[i];\n        const orderData = {\n          id: row[0],\n          status: row[1],\n          items: [],\n          total: 0,\n          currencyUnit: row[7],\n        };\n\n        const item = {\n          id: row[2],\n          description: row[3],\n          price: parseFloat(row[4]),\n          quantity: parseInt(row[5]),\n        };\n\n        // Check if order with the same ID already exists\n        const existingOrder = orders.find(o => o.id === orderData.id);\n        if (existingOrder) {\n          existingOrder.items.push(item);\n          existingOrder.total += item.price * item.quantity;\n        } else {\n          orderData.items.push(item);\n          orderData.total = item.price * item.quantity;\n          orders.push(orderData);\n        }\n      }\n\n      console.log(orders);\n    };\n\n    reader.readAsArrayBuffer(file);\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop: handleDrop,\n  });\n\n  return (\n    <div {...getRootProps()} className={isDragActive ? \"drag-active\" : \"\"}>\n      <input {...getInputProps()} />\n      {isDragActive ? (\n        <p>Drop the Excel file here...</p>\n      ) : (\n        <p>Drag and drop an Excel file here, or click to select a file</p>\n      )}\n    </div>\n  );\n}\n\nexport default ExcelDragAndDrop;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}